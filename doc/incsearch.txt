*incsearch.txt*	Incrementally highlight all pattern matches

Author  : haya14busa <hayabusa1419@gmail.com>
Version : 0.9.3
License : MIT license {{{

	Copyright (c) 2014 haya14busa

	Permission is hereby granted, free of charge, to any person obtaining
	a copy of this software and associated documentation files (the
	"Software"), to deal in the Software without restriction, including
	without limitation the rights to use, copy, modify, merge, publish,
	distribute, sublicense, and/or sell copies of the Software, and to
	permit persons to whom the Software is furnished to do so, subject to
	the following conditions:
	The above copyright notice and this permission notice shall be
	included in all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

}}}

CONTENTS				*incsearch-contents*

	Introduction			|incsearch-introduction|
	Install				|incsearch-install|
	Usage				|incsearch-usage|
	    Basic usage			|incsearch-basic-usage|
	    Additional usage		|incsearch-additional-usage|
	    Command line interface	|incsearch-commandline-interface|
	    Highlight			|incsearch-highlight|
	    AUTOCMD			|incsearch-autocmd|
	Known Issues			|incsearch-known-issues|
	ChangeLog			|incsearch-changelog|

==============================================================================
INTRODUCTION					    *incsearch-introduction*

	*incsearch.vim* provide incremental highlighting for __ALL__ pattern
	matches unlike default |'incsearch'|.
	You can use incsearch.vim as improved |/| & |?|.

==============================================================================
INSTALL						    *incsearch-install*

	Install with |NeoBundle|:

		1. Add the following configuration to your vimrc.
>
		NeoBundle 'haya14busa/incsearch'
<
		2. Install with |:NeoBundleInstall|.

	Install with |NeoBundleLazy|:

		1. Add the following configuration sample to your vimrc.
>
		NeoBundleLazy 'haya14busa/incsearch', {
		\   'autoload' : {
		\     'mappings' : ['<Plug>(incsearch-']
		\   }
		\ }
<
		2. Install with |:NeoBundleInstall|.


==============================================================================
USAGE							*incsearch-usage*

------------------------------------------------------------------------------
Basic usage~
							*incsearch-basic-usage*
						*<Plug>(incsearch-forward)*
						*<Plug>(incsearch-backward)*
						*<Plug>(incsearch-stay)*
	Write following lines to your vimrc:
>
		map /  <Plug>(incsearch-forward)
		map ?  <Plug>(incsearch-backward)
		map g/ <Plug>(incsearch-stay)
<
    <Plug>(incsearch-forward)  : Incremental searching to forward
    <Plug>(incsearch-backward) : Incremental searching to backward
    <Plug>(incsearch-stay)     : It doesn't move the cursor unless explicitly
                                 using cursor move command while incremental
                                 searching.

------------------------------------------------------------------------------
Additional usage~
						    *incsearch-additional-usage*

					    *g:incsearch#consistent_n_direction*
	If you set this option to 1, |n| and |N| directions are always forward
	and backward respectively even after performing
	|<Plug>(incsearch-backward)| which is improved motion of |?|.
>
	    let g:incsearch#consistent_n_direction = 1
<
	default: 0

				*g:incsearch#do_not_save_error_message_history*
	If you set this option to 1, error and warning messages with search
	command don't save into |message-history|.
	|message-history| doesn't be messed up with some unneeded error and
	warning messages like |E486| ,`search hit BOTTOM, continuing at TOP`
	warning, and so on. Welcome clean |message-history|!
>
	    let g:incsearch#do_not_save_error_message_history = 1
<
	default: 0

------------------------------------------------------------------------------
Command line interface~
					*incsearch-commandline-interface*

:IncSearchNoreMap {lhs} {rhs}				*IncSearchNoreMap*

	Map the key sequence {lhs} to {rhs} for the |incsearch.vim| command
	line interface. This command doesn't load while loading your vimrc,
	so please call by |VimEnter| or |neobundle-hooks-on_post_source| if
	you use |NeoBundle|.

							*<Over>(incsearch-next)*
							*<Over>(incsearch-prev)*
	Emacs-like incsearch: move the cursor while incremental searching

	<Over>(incsearch-next) : to the next match. default: <Tab>
	<Over>(incsearch-prev) : to the prev match. default: <S-Tab>

						*<Over>(incsearch-scroll-f)*
						*<Over>(incsearch-scroll-b)*

	Scroll-like feature while incremental searching.

	<Over>(incsearch-scroll-f) : scroll to the next page match.
				    default: <C-j>
	<Over>(incsearch-scroll-b) : scroll to the previous page match.
				    default: <C-k>

	Example:
>
		augroup incsearch-keymap
		    autocmd!
		    autocmd VimEnter call s:incsearch_keymap()
		augroup END
		function! s:incsearch_keymap()
		    IncSearchNoreMap <Right> <Over>(incsearch-next)
		    IncSearchNoreMap <Left>  <Over>(incsearch-prev)
		    IncSearchNoreMap <Down>  <Over>(incsearch-scroll-f)
		    IncSearchNoreMap <Up>    <Over>(incsearch-scroll-b)
		endfunction
<
						*g:incsearch#emacs_like_keymap*
	It enables Emacs-like keymappings if you set
	|g:incsearch#emacs_like_keymap| to 1. default: 0

		Emacs-like keymapping table~

		{lhs}  | {rhs}
		-------|----------
		<C-f>  | |<Right>|
		<C-b>  | |<Left>|
		<C-n>  | |<Down>|
		<C-p>  | |<Up>|
		<C-a>  | |<Home>|
		<C-e>  | |<End>|
		<C-d>  | |<Del>|
		<A-d>  | |<C-w>|

Buffer completion			*incsearch-<Over>(buffer-complete)*
	Completion with the buffer text.

	<Over>(buffer-complete)  start buffer text completion. default: <C-l>
	<Right>			 select next candidate while completion
	<Left>			 select candidate while completion

	Example: >
		augroup incsearch-keymap
		    autocmd!
		    autocmd VimEnter call s:incsearch_keymap()
		augroup END
		function! s:incsearch_keymap()
		    IncSearchNoreMap <Tab> <Over>(buffer-complete)
		endfunction
<
------------------------------------------------------------------------------
Highlight ~
							*incsearch-highlight*

						*g:incsearch#separate_highlight*
	Highlight matched pattern separately with forward matches and
	backward matches.
>
	    let g:incsearch#separate_highlight = 1
<
	default: 0

Highlight Group ~
						    *incsearch-highlight-group*

| highlight group       | description                                     |
| -------------------   | ---------------------------------------------   |
| *IncSearchMatch*        | For all matched pattern. default: `Search`        |
| *IncSearchMatchReverse* | For all matched pattern in reverse direction,   |
|                       | if |g:incsearch#separate_highlight| is on.        |
|                       | default: `IncSearch`                              |
| *IncSearchOnCursor*     | For the matched pattern on the cursor.          |
|                       | default: `IncSearch`                              |
| *IncSearchCursor*       | For cursor position. default: `Cursor`            |
| *IncSearchUnderline*    | It's not used by default. For the customization |

Customize highlight ~

	Change cursor color to red

	Example: >

    highlight IncSearchCursor ctermfg=0 ctermbg=9 guifg=#000000 guibg=#FF0000
<
							*g:incsearch#highlight*
	or use the |g:incsearch#highlight| option.

	Example: >

		let g:incsearch#highlight = {
		\   'match' : {
		\     'group' : 'IncSearchUnderline',
		\     'priority' : '10'
		\   },
		\   'on_cursor' : {
		\     'priority' : '100'
		\   },
		\   'cursor' : {
		\     'group' : 'ErrorMsg',
		\     'priority' : '1000'
		\   }
		\ }
<
------------------------------------------------------------------------------
AUTOCMD ~
							    *incsearch-autocmd*

|incsearch.vim| triggers those following |User| |autocmd|.

Name			triggered by ~
IncSearchEnter		triggered when you enter the command line
IncSearchLeave		triggered when you leave the command line
IncSearchExecutePre	triggered before a command execution
IncSearchCharPre	triggered before every character insertion
IncSearchChar		triggered after every character insertion
IncSearchCancel		triggered when you exit without running the line

NOTE:
	incsearch.vim uses |:map-<expr>| for visual and operator-pending
	mappings, so the same restriction apply to your defined autocmd.

==============================================================================
KNOWN ISSUES						*incsearch-issues*

	Issues
	  https://github.com/haya14busa/incsearch/issues


==============================================================================
CHANGELOG						*incsearch-changelog*

0.9.4	2014-10-01
	1. Improve cursor position while incremental searching
	    - Now you can see cursor position working with |{offset}| unlike
	      default |'incsearch'|
	2. Fix and improve visual selection while incremental searching
	3. Fix to ignore search related errors while searching
	4. Handle unfolding after search execution
	5. Cover more test cases
	6. Start CI on windows with AppVeyor in addition to travis

0.9.3	2014-09-28
	1. Do not use |:map-<expr>| for normal and visual mode mappings.
	    - Still use <expr> for operator-pending mappings to support |.|
	      (dot) repeat without depending on other repeat extention like
	      vim-repeat
	    - This change avoid flickering after search and support |:normal|
	      for |incsearch-autocmd|
	2. Implement |g:incsearch#consistent_n_direction|
	3. Implement |g:incsearch#do_not_save_error_message_history|
	4. Improve stability. More comprehensive testing!
	5. Improve scroll feature while searching.
	    - see: |<Over>(incsearch-scroll-f)| for scroll feature
	6. Fix to use given |registers| with |quote| (")
	7. Improve and fix some problems

0.9.2	2014-08-25
	1. Add test
	2. Minor fix: history emulation with |<Plug>(incsearch-stay)|
	3. Improve pseud-visual highlight: consider curswant for |visual-block|
	4. Minor performance improvement: do not always generate direction
	   specific patterns

0.9.1	2014-08-15
	1. Fix visual highlight
	2. Improve cursor moving
	    - Now, you can move the cursor to the reverse direction
	    - Scroll-like feature |<Over>(incsearch-scroll-f)| &
	      |<Over>(incsearch-scroll-b)|
	    - Handle |wrapscan| option
	    - Enable cursor moving while |<Plug>(incsearch-stay)|
	3. Implement |g:incsearch#separate_highlight| option

0.9.0	2014-08-09
	- Init.
	  1. Incremental highlight for all matched pattern
	  2. Cursor move while incremental searching like emacs


vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:fdm=marker:
